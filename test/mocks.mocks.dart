// Mocks generated by Mockito 5.4.6 from annotations
// in myapp/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/entry/entry.dart' as _i4;
import 'package:myapp/entry/repository/entry_repository.dart' as _i3;
import 'package:myapp/speech_service.dart' as _i6;
import 'package:record/src/record.dart' as _i7;
import 'package:record_platform_interface/record_platform_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAmplitude_0 extends _i1.SmartFake implements _i2.Amplitude {
  _FakeAmplitude_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EntryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEntryRepository extends _i1.Mock implements _i3.EntryRepository {
  MockEntryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Entry> get currentEntries =>
      (super.noSuchMethod(
            Invocation.getter(#currentEntries),
            returnValue: <_i4.Entry>[],
          )
          as List<_i4.Entry>);

  @override
  List<String> get currentCategories =>
      (super.noSuchMethod(
            Invocation.getter(#currentCategories),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i4.Entry>> addEntry(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#addEntry, [text]),
            returnValue: _i5.Future<List<_i4.Entry>>.value(<_i4.Entry>[]),
          )
          as _i5.Future<List<_i4.Entry>>);

  @override
  _i5.Future<List<_i4.Entry>> addEntryObject(_i4.Entry? entryToAdd) =>
      (super.noSuchMethod(
            Invocation.method(#addEntryObject, [entryToAdd]),
            returnValue: _i5.Future<List<_i4.Entry>>.value(<_i4.Entry>[]),
          )
          as _i5.Future<List<_i4.Entry>>);

  @override
  _i5.Future<List<_i4.Entry>> deleteEntry(_i4.Entry? entryToDelete) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEntry, [entryToDelete]),
            returnValue: _i5.Future<List<_i4.Entry>>.value(<_i4.Entry>[]),
          )
          as _i5.Future<List<_i4.Entry>>);

  @override
  _i5.Future<List<_i4.Entry>> updateEntry(
    _i4.Entry? originalEntry,
    _i4.Entry? updatedEntry,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateEntry, [originalEntry, updatedEntry]),
            returnValue: _i5.Future<List<_i4.Entry>>.value(<_i4.Entry>[]),
          )
          as _i5.Future<List<_i4.Entry>>);

  @override
  _i5.Future<List<_i4.Entry>> processCombinedEntry(
    String? combinedText,
    DateTime? tempEntryTimestamp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processCombinedEntry, [
              combinedText,
              tempEntryTimestamp,
            ]),
            returnValue: _i5.Future<List<_i4.Entry>>.value(<_i4.Entry>[]),
          )
          as _i5.Future<List<_i4.Entry>>);

  @override
  _i5.Future<List<String>> addCustomCategory(String? newCategory) =>
      (super.noSuchMethod(
            Invocation.method(#addCustomCategory, [newCategory]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<({List<String> categories, List<_i4.Entry> entries})>
  deleteCategory(String? categoryToDelete) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCategory, [categoryToDelete]),
            returnValue: _i5.Future<
              ({List<String> categories, List<_i4.Entry> entries})
            >.value((categories: <String>[], entries: <_i4.Entry>[])),
          )
          as _i5.Future<({List<String> categories, List<_i4.Entry> entries})>);

  @override
  _i5.Future<({List<String> categories, List<_i4.Entry> entries})>
  renameCategory(String? oldName, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#renameCategory, [oldName, newName]),
            returnValue: _i5.Future<
              ({List<String> categories, List<_i4.Entry> entries})
            >.value((categories: <String>[], entries: <_i4.Entry>[])),
          )
          as _i5.Future<({List<String> categories, List<_i4.Entry> entries})>);

  @override
  _i5.Future<bool> markEntryAsNotNew(DateTime? timestamp, String? text) =>
      (super.noSuchMethod(
            Invocation.method(#markEntryAsNotNew, [timestamp, text]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [SpeechService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpeechService extends _i1.Mock implements _i6.SpeechService {
  MockSpeechService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String?> transcribeAudio(
    String? filePath, {
    String? language = 'en',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transcribeAudio,
              [filePath],
              {#language: language},
            ),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);
}

/// A class which mocks [AudioRecorder].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioRecorder extends _i1.Mock implements _i7.AudioRecorder {
  MockAudioRecorder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> start(_i2.RecordConfig? config, {required String? path}) =>
      (super.noSuchMethod(
            Invocation.method(#start, [config], {#path: path}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i5.Stream<_i8.Uint8List>> startStream(_i2.RecordConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#startStream, [config]),
            returnValue: _i5.Future<_i5.Stream<_i8.Uint8List>>.value(
              _i5.Stream<_i8.Uint8List>.empty(),
            ),
          )
          as _i5.Future<_i5.Stream<_i8.Uint8List>>);

  @override
  _i5.Future<String?> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> cancel() =>
      (super.noSuchMethod(
            Invocation.method(#cancel, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isRecording() =>
      (super.noSuchMethod(
            Invocation.method(#isRecording, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> isPaused() =>
      (super.noSuchMethod(
            Invocation.method(#isPaused, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> hasPermission() =>
      (super.noSuchMethod(
            Invocation.method(#hasPermission, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<List<_i2.InputDevice>> listInputDevices() =>
      (super.noSuchMethod(
            Invocation.method(#listInputDevices, []),
            returnValue: _i5.Future<List<_i2.InputDevice>>.value(
              <_i2.InputDevice>[],
            ),
          )
          as _i5.Future<List<_i2.InputDevice>>);

  @override
  _i5.Future<_i2.Amplitude> getAmplitude() =>
      (super.noSuchMethod(
            Invocation.method(#getAmplitude, []),
            returnValue: _i5.Future<_i2.Amplitude>.value(
              _FakeAmplitude_0(this, Invocation.method(#getAmplitude, [])),
            ),
          )
          as _i5.Future<_i2.Amplitude>);

  @override
  _i5.Future<bool> isEncoderSupported(_i2.AudioEncoder? encoder) =>
      (super.noSuchMethod(
            Invocation.method(#isEncoderSupported, [encoder]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<_i2.RecordState> onStateChanged() =>
      (super.noSuchMethod(
            Invocation.method(#onStateChanged, []),
            returnValue: _i5.Stream<_i2.RecordState>.empty(),
          )
          as _i5.Stream<_i2.RecordState>);

  @override
  _i5.Stream<_i2.Amplitude> onAmplitudeChanged(Duration? interval) =>
      (super.noSuchMethod(
            Invocation.method(#onAmplitudeChanged, [interval]),
            returnValue: _i5.Stream<_i2.Amplitude>.empty(),
          )
          as _i5.Stream<_i2.Amplitude>);

  @override
  List<int> convertBytesToInt16(
    _i8.Uint8List? bytes, [
    dynamic endian = _i8.Endian.little,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#convertBytesToInt16, [bytes, endian]),
            returnValue: <int>[],
          )
          as List<int>);
}
