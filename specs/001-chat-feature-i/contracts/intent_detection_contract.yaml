# Intent Detection API Contract
# OpenAI Responses API - GPT-5-nano for binary classification

openapi: 3.0.0
info:
  title: Intent Detection Contract
  version: 1.0.0
  description: Contract for classifying user input as note or chat intent using GPT-5-nano

servers:
  - url: https://api.openai.com/v1
    description: OpenAI API

paths:
  /responses:
    post:
      summary: Classify user input intent
      operationId: classifyIntent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - input
                - text
              properties:
                model:
                  type: string
                  enum: [gpt-5-nano]
                  description: Model to use for classification
                input:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum: [system, user]
                      content:
                        type: string
                  description: Conversation history
                  example:
                    - role: system
                      content: "You are an intent classifier that determines if user input is a NOTE or a CHAT question.\n\nNOTE: A statement to be logged (e.g., \"Had coffee with Sarah\", \"Feeling good today\")\nCHAT: A question about existing logs (e.g., \"When did I last have coffee?\", \"Show my workouts\")\n\nReturn JSON: { \"intent\": \"note\" | \"chat\" | \"ambiguous\", \"confidence\": 0.0-1.0 }\n\nMark as \"ambiguous\" if confidence < 0.7"
                    - role: user
                      content: "When was the last time I had coffee?"
                text:
                  type: object
                  properties:
                    format:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [json_object]
                  description: Response format specification
                metadata:
                  type: object
                  properties:
                    request_type:
                      type: string
                      enum: [intent_classification]
                    app_name:
                      type: string
                      example: log-everything
                    timestamp:
                      type: string
                      format: date-time
                    input_length:
                      type: string
                  description: Request metadata for tracking

      responses:
        '200':
          description: Successful intent classification
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                  - output
                properties:
                  id:
                    type: string
                    description: Response ID
                  status:
                    type: string
                    enum: [completed]
                  error:
                    type: 'null'
                  output:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [message]
                        content:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum: [output_text]
                              text:
                                type: string
                                description: JSON string containing intent classification
                                example: '{"intent":"chat","confidence":0.95}'
              examples:
                chatIntent:
                  summary: Chat intent detected with high confidence
                  value:
                    id: resp_abc123
                    status: completed
                    error: null
                    output:
                      - type: message
                        content:
                          - type: output_text
                            text: '{"intent":"chat","confidence":0.95}'

                noteIntent:
                  summary: Note intent detected
                  value:
                    id: resp_def456
                    status: completed
                    error: null
                    output:
                      - type: message
                        content:
                          - type: output_text
                            text: '{"intent":"note","confidence":0.88}'

                ambiguousIntent:
                  summary: Ambiguous intent (low confidence)
                  value:
                    id: resp_ghi789
                    status: completed
                    error: null
                    output:
                      - type: message
                        content:
                          - type: output_text
                            text: '{"intent":"ambiguous","confidence":0.62}'

        '400':
          description: Bad request - invalid model or parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid model specified
                      type:
                        type: string
                      code:
                        type: string

        '401':
          description: Authentication failed - invalid API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid API key
                      type:
                        type: string
                      code:
                        type: string

        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Rate limit exceeded
                      type:
                        type: string
                      code:
                        type: string

components:
  schemas:
    IntentClassificationResult:
      type: object
      required:
        - intent
        - confidence
      properties:
        intent:
          type: string
          enum: [note, chat, ambiguous]
          description: The classified intent type
        confidence:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          description: AI confidence score (0.0-1.0)
      example:
        intent: chat
        confidence: 0.95

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key

security:
  - bearerAuth: []
